version: '3.8'
services:
  web:
    container_name: django_project
    build:
      context: . # local base image dir
      # ssh: ["default"] # mount the deafult ssh agent
      dockerfile: Dockerfile
      # shm_size: '1gb'
      # platforms: ["linux/arm64","linux/arm32",]
    command: 
      - python manage.py runserver 0.0.0.0:8000
      - celery worker --app=blog --loglevel=info
    ports:
      - 8000:8000
    env_file:
      - ./.env
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=core.settings
      - CELERY_BROKER_URL=redis://redis:6379/1
    volumes:
      - ./docker/backup:/app
    networks:
      - main
    depends_on:
      - database
    # labels:
    #   - com.digibrands.by=Chriford


  redis:
    container_name: redis
    image: redis:alpine
    # labels:
    #   - com.digibrands.by=Chriford

  # nginx:
  #   container_name: nginx
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   volumes:
  #     - static:/static
  #   ports:
  #     - "5354:5354"
  #   depends_on:
  #     - gunicorn_web
  #   labels:
  #     - com.digibrands.by=label
  elasticsearch:
    container_name: esearch
    image: elasticsearch:7.14.2
    ports: 
      - "9200:9200"
    environment:
      - discovery.type=single-node

  database:
    # container_name: postgres_db
    image: postgres
    restart: always
    environment:
      POSTRES_DB: blog
      POSTGRES_USER: blog
      POSTGRES_PASSWORD: digibrand-blog
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    # labels:
    #   - com.digibrands.by=Chriford

  # neo4j:
  #   container_name: testneo4j
  #   image: neo4j:latest
  #   ports:
  #     - 7474:7474 
  #     - 7687:7687
  #   volumes:
  #     - $HOME/neo4j/data:/data
  #     - $HOME/neo4j/logs:/logs
  #     - $HOME/neo4j/import:/var/lib/neo4j/import
  #     - $HOME/neo4j/plugins:/plugins
  #   environment:
  #     - NEO4J_AUTH=neo4j/password
    
    
networks:
  main:

volumes:
  static:
  pgdata:
